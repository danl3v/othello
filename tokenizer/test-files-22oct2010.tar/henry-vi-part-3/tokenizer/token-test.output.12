(:open
define:symbol
getListSubset:symbol
(:open
lambda:symbol
(:open
L:symbol
startIndex:symbol
endIndex:symbol
):close
(:open
letrec:symbol
(:open
[:open
helper:symbol
(:open
lambda:symbol
(:open
L:symbol
startIdx:symbol
endIdx:symbol
rv:symbol
depth:symbol
):close
(:open
begin:symbol
(:open
if:symbol
(:open
=:symbol
startIdx:symbol
0:integer
):close
(:open
if:symbol
(:open
<:symbol
endIdx:symbol
0:integer
):close
(:open
begin:symbol
(:open
reverse:symbol
rv:symbol
):close
):close
(:open
helper:symbol
(:open
cdr:symbol
L:symbol
):close
0:integer
(:open
-:symbol
endIdx:symbol
1:integer
):close
(:open
cons:symbol
(:open
car:symbol
L:symbol
):close
rv:symbol
):close
(:open
+:symbol
depth:symbol
1:integer
):close
):close
):close
(:open
helper:symbol
(:open
cdr:symbol
L:symbol
):close
(:open
-:symbol
startIdx:symbol
1:integer
):close
(:open
-:symbol
endIdx:symbol
1:integer
):close
rv:symbol
(:open
+:symbol
depth:symbol
1:integer
):close
):close
):close
):close
):close
]:close
):close
(:open
if:symbol
(:open
or:symbol
(:open
<:symbol
startIndex:symbol
0:integer
):close
(:open
>:symbol
endIndex:symbol
(:open
-:symbol
(:open
length:symbol
L:symbol
):close
1:integer
):close
):close
(:open
>:symbol
startIndex:symbol
endIndex:symbol
):close
):close
':quote
(:open
):close
(:open
helper:symbol
L:symbol
startIndex:symbol
endIndex:symbol
':quote
(:open
):close
0:integer
):close
):close
):close
):close
):close
