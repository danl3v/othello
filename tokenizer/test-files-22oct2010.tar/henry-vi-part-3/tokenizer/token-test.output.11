(:open
define:symbol
indexOfCharHelper:symbol
(:open
lambda:symbol
(:open
haystack:symbol
needle:symbol
idx:symbol
):close
(:open
if:symbol
(:open
>=:symbol
idx:symbol
(:open
string-length:symbol
haystack:symbol
):close
):close
-1:integer
(:open
let:symbol
(:open
[:open
firstChar:symbol
(:open
string-ref:symbol
haystack:symbol
idx:symbol
):close
]:close
):close
(:open
if:symbol
(:open
equal?:symbol
firstChar:symbol
needle:symbol
):close
idx:symbol
(:open
indexOfCharHelper:symbol
haystack:symbol
needle:symbol
(:open
+:symbol
idx:symbol
1:integer
):close
):close
):close
):close
):close
):close
):close
(:open
define:symbol
indexOfChar:symbol
(:open
lambda:symbol
(:open
haystack:symbol
needle:symbol
):close
(:open
indexOfCharHelper:symbol
haystack:symbol
needle:symbol
0:integer
):close
):close
):close
